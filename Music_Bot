from telegram.ext import Updater, CommandHandler, MessageHandler, Filters
import youtube_dl
import logging

# Enable logging for debugging
logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
                    level=logging.INFO)
logger = logging.getLogger(__name__)

# Insert your bot token here
TOKEN = 'YOUR_BOT_TOKEN'

def start(update, context):
    """Send a message when the command /start is issued."""
    update.message.reply_text('Hi! Send me a YouTube link and I will convert it to MP3.')

def error(update, context):
    """Log Errors caused by Updates."""
    logger.warning('Update "%s" caused error "%s"', update, context.error)

def convert_youtube(update, context):
    """Convert the received YouTube URL to MP3 and send it back."""
    url = update.message.text
    ydl_opts = {
        'format': 'bestaudio/best',
        'postprocessors': [{
            'key': 'FFmpegExtractAudio',
            'preferredcodec': 'mp3',
            'preferredquality': '192',
        }],
        'outtmpl': '%(title)s.%(ext)s',
    }

    with youtube_dl.YoutubeDL(ydl_opts) as ydl:
        info = ydl.extract_info(url, download=False)
        file_name = ydl.prepare_filename(info)
        ydl.download([url])

    update.message.reply_audio(audio=open(file_name, 'rb'))

def main():
    """Start the bot."""
    # Create Updater and pass it your bot's token.
    updater = Updater(TOKEN, use_context=True)

    # Get the dispatcher to register handlers
    dp = updater.dispatcher

    # Register handlers
    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(MessageHandler(Filters.text & ~Filters.command, convert_youtube))
    dp.add_error_handler(error)

    # Start the Bot
    updater.start_polling()
    updater.idle()

if __name__ == '__main__':
    main()
